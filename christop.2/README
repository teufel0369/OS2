#  Unix System Calls and Library Functions


SUMMARY: This project will have two executable files. The first executable file, Master, will be in charge of
         launching a specific number of child processes using a fork followed by an exec. Master should then keep track of
         how many workers have finished executing and terminate itself only when all of its children have finished. Master will also
         be responsible for creating shared memory to store two integers and then initializing those integers to zero. This shared
         memory should be accessible by the workers. This shared memory will act as a ”clock” in that one integer represents seconds,
         the other one represents milliseconds. There are several termination criteria. First, if all the workers have finished,
         master should free up shared memory and terminate. In addition, the program will terminate after 2 seconds.
         It will also catch the ctrl-c signal, free up shared memory and then terminate all workers. No matter how it terminated,
         master will output the value of the shared clock.

USAGE: `./master -n <NUMBER> -s <NUMBER>`
Description: Will fork `x` number of processes with the `-n` flag and only allow `x` number of
             processes to exist in the system at one time with the `-s` flag.

USAGE: `./master -n <NUMBER>`
Description: Will fork `x` number of processes with the `-n` flag.

USAGE: `./master
 -h`
Description: Will output the help menu

GIT REPOSITORY: https://github.com/teufel0369/OS2/christop.2.git

VERSION CONTROL LOGGING:

This project was branched to a working branch at the beginning of the project and merged to master on <MERGE DATE>.
You may see log of the commit history located at:

COMMIT LOGS: `https://github.com/teufel0369/OS2/commits/master